/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: 'versions.yml'
        ]
    }
}

process {

    withName: 'ORTHOFINDER' {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/tools/orthofinder" },
            mode: params.publish_dir_mode,
            pattern: "ortho_f/OrthoFinder/Results_*/Orthologues/Orthologues_${params.project_id}.final.transdecoder.pep/" ,
            enabled: params.save_tool_outs
        ]
        errorStrategy = 'ignore'
    }
    withName: 'EGGNOGMAPPER' {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/tools/eggnog" },
            mode: params.publish_dir_mode,
            enabled: params.save_tool_outs
        ]
    }
    withName: 'TREEGRAFTER' {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/tools/treegrafter" },
            mode: params.publish_dir_mode,
            enabled: params.save_tool_outs
        ]
    }
    withName: 'ORTHOLOGER' {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/tools/orthologer" },
            pattern: 'odbwork/Cluster/odbproj.og' ,
            mode: params.publish_dir_mode,
            enabled: params.save_tool_outs
        ]
    }
    withName: 'POST_PROC' {
        ext.args   = ''
    }
    withName: 'TRANSDECODER_PREDICT' {
        ext.args   = '--single_best_only'
        publishDir = [
            path: { "${params.outdir}/transdecoder/t_predict" },
            mode: params.publish_dir_mode,
            enabled: params.save_proteins
        ]
    }
    withName: 'TRANSDECODER_LONGORF' {
        ext.args   = '--complete_orfs_only'
        publishDir = [
            path: { "${params.outdir}/transdecoder/t_longorf" },
            mode: params.publish_dir_mode,
            enabled: params.save_proteins
        ]
    }
    withName: 'HMMER_HMMSCAN' {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/transdecoder/hmmscan" },
            mode: params.publish_dir_mode,
            enabled: params.save_proteins
        ]
    }
    withName: 'DAGCHAINER' {
        ext.args  = "$params.dup_match_interval"
        ext.args2 = ''
        publishDir = [
            path: { "${params.outdir}/tools/dagchainer" },
            mode: params.publish_dir_mode,
            enabled: params.save_tool_outs
        ]
    }
    withName: 'TBL_2_JSON_1V1' {
        ext.args = { meta.id }
    }
    withName: 'GFFREAD' {
        publishDir = [
            path: { "${params.outdir}/gffread/" },
            mode: params.publish_dir_mode,
            enabled: params.save_transcripts
        ]
    }
    withName: 'VOTE_BEST_MATCH' {
        publishDir = [
            path: { "${params.outdir}/consensus_vote" },
            mode: params.publish_dir_mode,
        ]
    }
}
